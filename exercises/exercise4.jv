pipeline TemperaturePipeline {

    TemperatureExtractor
        -> TemperatureArchiveInterpreter
        -> TemperatureFilePicker
        -> TemperatureTextFileInterpreter
        -> TemperatureCSVInterpreter
        -> TemperatureCellRangeSelector
        -> TemperatureCellWriter
        -> TemperatureTableInterpreter
        -> TemperatureTableTransformer
        -> TemeperatureTableTransformer2
        -> TemperatureLoader;

    block TemperatureExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block TemperatureArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TemperatureFilePicker oftype FilePicker {
        path: "./data.csv";
    }

    block TemperatureTextFileInterpreter oftype TextFileInterpreter { }

    block TemperatureCSVInterpreter oftype CSVInterpreter {
        enclosing: '"';
        delimiter: ";";
        enclosingEscape: '"';
    }

    block TemperatureCellRangeSelector oftype CellRangeSelector {
        select: range A1:K*;
    }

    block TemperatureCellWriter oftype CellWriter {
        at: range A1:K1;
        write: [
            "id",
            "producer",
            "model",
            "month",
            "temperature",
            "Lat",
            "Lon",
            "Verschleierung",
            "Aufenthaltsdauer im Freien",
            "battery_temperature",
            "device_active"
        ];
    }

    block TemperatureTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype id,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype month,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }

    block TemperatureTableTransformer oftype TableTransformer {
        uses: CelsiusToFahrenheit;
        inputColumns: [
            "temperature"
        ];
        outputColumn: "temperature";
    }

    block TemeperatureTableTransformer2 oftype TableTransformer {
        uses: CelsiusToFahrenheit;
        inputColumns: [
            "battery_temperature"
        ];
        outputColumn: "battery_temperature";
    }

    block TemperatureLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }
}

transform CelsiusToFahrenheit {
    from Celsius oftype decimal;
    to Fahrenheit oftype decimal;

    Fahrenheit: (Celsius * 9/5) + 32;
}

valuetype id oftype integer {
    constraints: [
        positive
    ];
}

valuetype month oftype integer {
    constraints: [
        twelve
    ];
}

constraint positive oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: false;
}

constraint twelve oftype RangeConstraint {
    lowerBound: 1;
    upperBound: 12;
    lowerBoundInclusive: true;
    upperBoundInclusive: true;
}
